/* Generated by Yosys 0.7 (git sha1 61f6811, i686-w64-mingw32.static-gcc 4.9.3 -Os) */

(* top =  1  *)
(* src = "Mux.v:2" *)
module mux(sel, reset, din_0, v_0, din_1, v_1, muxOut, v_out);
  (* src = "Mux.v:13" *)
  wire [3:0] _00_;
  (* src = "Mux.v:13" *)
  wire _01_;
  (* src = "Mux.v:13" *)
  wire [3:0] _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  (* src = "Mux.v:17" *)
  wire _16_;
  (* src = "Mux.v:5" *)
  input [3:0] din_0;
  (* src = "Mux.v:7" *)
  input [3:0] din_1;
  (* src = "Mux.v:9" *)
  output [3:0] muxOut;
  (* src = "Mux.v:4" *)
  input reset;
  (* src = "Mux.v:3" *)
  input sel;
  (* src = "Mux.v:6" *)
  input v_0;
  (* src = "Mux.v:8" *)
  input v_1;
  (* src = "Mux.v:10" *)
  output v_out;
  assign _09_ = _14_ | _15_;
  assign _01_ = sel ? (* src = "Mux.v:17" *) v_1 : v_0;
  assign _02_[0] = sel ? (* src = "Mux.v:17" *) din_1[0] : din_0[0];
  assign _02_[1] = sel ? (* src = "Mux.v:17" *) din_1[1] : din_0[1];
  assign _02_[2] = sel ? (* src = "Mux.v:17" *) din_1[2] : din_0[2];
  assign _02_[3] = sel ? (* src = "Mux.v:17" *) din_1[3] : din_0[3];
  assign _00_[0] = reset ? (* src = "Mux.v:15" *) 1'b0 : _02_[0];
  assign _00_[1] = reset ? (* src = "Mux.v:15" *) 1'b0 : _02_[1];
  assign _00_[2] = reset ? (* src = "Mux.v:15" *) 1'b0 : _02_[2];
  assign _00_[3] = reset ? (* src = "Mux.v:15" *) 1'b0 : _02_[3];
  assign _16_ = ~(* src = "Mux.v:17" *) sel;
  assign _05_ = ~v_1;
  assign _06_ = ~v_0;
  assign _03_ = ~_11_;
  assign _04_ = ~reset;
  \$_DLATCH_P_  _32_ (
    .D(_00_[0]),
    .E(_03_),
    .Q(muxOut[0])
  );
  \$_DLATCH_P_  _33_ (
    .D(_00_[1]),
    .E(_03_),
    .Q(muxOut[1])
  );
  \$_DLATCH_P_  _34_ (
    .D(_00_[2]),
    .E(_03_),
    .Q(muxOut[2])
  );
  \$_DLATCH_P_  _35_ (
    .D(_00_[3]),
    .E(_03_),
    .Q(muxOut[3])
  );
  \$_DLATCH_P_  _36_ (
    .D(_01_),
    .E(_04_),
    .Q(v_out)
  );
  assign _12_ = sel & _05_;
  assign _13_ = _04_ & _12_;
  assign _15_ = sel & _13_;
  assign _07_ = _16_ & _06_;
  assign _08_ = _04_ & _07_;
  assign _14_ = _16_ & _08_;
  assign _10_ = _04_ & _09_;
  assign _11_ = _04_ & _10_;
endmodule
