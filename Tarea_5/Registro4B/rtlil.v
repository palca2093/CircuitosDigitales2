/* Generated by Yosys 0.7 (git sha1 61f6811, i686-w64-mingw32.static-gcc 4.9.3 -Os) */

(* top =  1  *)
(* src = "Conductual.v:1" *)
module Conductual(q, s_out, clk, enb, dir, s_in, mode, d);
  (* src = "Conductual.v:7" *)
  wire [3:0] _00_;
  (* src = "Conductual.v:7" *)
  wire _01_;
  wire _02_;
  wire [1:0] _03_;
  wire [1:0] _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire [3:0] _11_;
  wire [3:0] _12_;
  wire [3:0] _13_;
  wire [3:0] _14_;
  wire [3:0] _15_;
  (* src = "Conductual.v:2" *)
  input clk;
  (* src = "Conductual.v:4" *)
  input [3:0] d;
  (* src = "Conductual.v:2" *)
  input dir;
  (* src = "Conductual.v:2" *)
  input enb;
  (* src = "Conductual.v:3" *)
  input [1:0] mode;
  (* src = "Conductual.v:5" *)
  output [3:0] q;
  reg [3:0] q;
  (* src = "Conductual.v:2" *)
  input s_in;
  (* src = "Conductual.v:6" *)
  output s_out;
  reg s_out;
  assign _05_ = _03_[0] |(* src = "Conductual.v:24" *)  mode[1];
  assign _06_ = mode[0] |(* src = "Conductual.v:37" *)  _04_[1];
  assign _02_ = mode[0] |(* src = "Conductual.v:11" *)  mode[1];
  assign _07_ = _06_ ? (* src = "Conductual.v:37" *) s_out : 1'b0;
  assign _08_ = _05_ ? (* src = "Conductual.v:24" *) _07_ : 1'b0;
  assign _09_ = dir ? (* src = "Conductual.v:13" *) q[0] : q[3];
  assign _10_ = _02_ ? (* src = "Conductual.v:11" *) _08_ : _09_;
  assign _01_ = enb ? (* src = "Conductual.v:9" *) _10_ : s_out;
  assign _11_[0] = _06_ ? (* src = "Conductual.v:37" *) q[0] : d[0];
  assign _11_[1] = _06_ ? (* src = "Conductual.v:37" *) q[1] : d[1];
  assign _11_[2] = _06_ ? (* src = "Conductual.v:37" *) q[2] : d[2];
  assign _11_[3] = _06_ ? (* src = "Conductual.v:37" *) q[3] : d[3];
  assign _12_[0] = dir ? (* src = "Conductual.v:26" *) q[1] : q[3];
  assign _12_[3] = dir ? (* src = "Conductual.v:26" *) q[0] : q[2];
  assign _13_[0] = _05_ ? (* src = "Conductual.v:24" *) _11_[0] : _12_[0];
  assign _13_[1] = _05_ ? (* src = "Conductual.v:24" *) _11_[1] : _12_[1];
  assign _13_[2] = _05_ ? (* src = "Conductual.v:24" *) _11_[2] : _12_[2];
  assign _13_[3] = _05_ ? (* src = "Conductual.v:24" *) _11_[3] : _12_[3];
  assign _14_[0] = dir ? (* src = "Conductual.v:13" *) q[1] : s_in;
  assign _12_[1] = dir ? (* src = "Conductual.v:13" *) q[2] : q[0];
  assign _12_[2] = dir ? (* src = "Conductual.v:13" *) q[3] : q[1];
  assign _14_[3] = dir ? (* src = "Conductual.v:13" *) s_in : q[2];
  assign _15_[0] = _02_ ? (* src = "Conductual.v:11" *) _13_[0] : _14_[0];
  assign _15_[1] = _02_ ? (* src = "Conductual.v:11" *) _13_[1] : _12_[1];
  assign _15_[2] = _02_ ? (* src = "Conductual.v:11" *) _13_[2] : _12_[2];
  assign _15_[3] = _02_ ? (* src = "Conductual.v:11" *) _13_[3] : _14_[3];
  assign _00_[0] = enb ? (* src = "Conductual.v:9" *) _15_[0] : q[0];
  assign _00_[1] = enb ? (* src = "Conductual.v:9" *) _15_[1] : q[1];
  assign _00_[2] = enb ? (* src = "Conductual.v:9" *) _15_[2] : q[2];
  assign _00_[3] = enb ? (* src = "Conductual.v:9" *) _15_[3] : q[3];
  (* src = "Conductual.v:7" *)
  always @(posedge clk)
      q[0] <= _00_[0];
  (* src = "Conductual.v:7" *)
  always @(posedge clk)
      q[1] <= _00_[1];
  (* src = "Conductual.v:7" *)
  always @(posedge clk)
      q[2] <= _00_[2];
  (* src = "Conductual.v:7" *)
  always @(posedge clk)
      q[3] <= _00_[3];
  (* src = "Conductual.v:7" *)
  always @(posedge clk)
      s_out <= _01_;
  assign _03_[0] = mode[0] ^(* src = "Conductual.v:24" *)  1'b1;
  assign _04_[1] = mode[1] ^(* src = "Conductual.v:37" *)  1'b1;
endmodule
